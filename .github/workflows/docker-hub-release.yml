name: docker-hub-release
# build all containers and push to Docker Hub registry
on:

  release:
    types:
      - created

jobs:

  container-build-mpd:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env:
        DOCK_HUB_UN: ${{ secrets.DOCK_HUB_UN }}
        DOCK_HUB_PW: ${{ secrets.DOCK_HUB_PW }}
      run: |
        echo $DOCK_HUB_PW | docker login -u $DOCK_HUB_UN --password-stdin
    - name: build_mpcontainer-mpd
      env:
        DOCK_HUB_UN: ${{ secrets.DOCK_HUB_UN }}
      run: |
        docker build -t mpcontainer-mpd:latest -f ./src/mpd/Dockerfile ./src/mpd/
        docker tag mpcontainer-mpd $DOCK_HUB_UN/mpcontainer-mpd:latest
    - name: push image to Docker Hub
      env:
        DOCK_HUB_UN: ${{ secrets.DOCK_HUB_UN }}
      run: |
        docker push $DOCK_HUB_UN/mpcontainer-mpd:latest

  container-build-shell:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env:
        DOCK_HUB_UN: ${{ secrets.DOCK_HUB_UN }}
        DOCK_HUB_PW: ${{ secrets.DOCK_HUB_PW }}
      run: |
        echo $DOCK_HUB_PW | docker login -u $DOCK_HUB_UN --password-stdin
    - name: build_mpcontainer-shell
      env:
        DOCK_HUB_UN: ${{ secrets.DOCK_HUB_UN }}
      run: |
        docker build -t mpcontainer-shell:latest -f ./src/adminshell/Dockerfile ./src/adminshell/
        docker tag mpcontainer-shell $DOCK_HUB_UN/mpcontainer-shell:latest
    - name: push images to Docker Hub
      env:
        DOCK_HUB_UN: ${{ secrets.DOCK_HUB_UN }}
      run: |
        docker push $DOCK_HUB_UN/mpcontainer-shell:latest

  container-build-web:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env:
        DOCK_HUB_UN: ${{ secrets.DOCK_HUB_UN }}
        DOCK_HUB_PW: ${{ secrets.DOCK_HUB_PW }}
      run: |
        echo $DOCK_HUB_PW | docker login -u $DOCK_HUB_UN --password-stdin
    - name: build_mpcontainer-web
      env:
        DOCK_HUB_UN: ${{ secrets.DOCK_HUB_UN }}
      run: |
        docker build -t mpcontainer-web:latest -f ./src/web/Dockerfile ./src/web/
        docker tag mpcontainer-web $DOCK_HUB_UN/mpcontainer-web:latest
    - name: push images to Docker Hub
      env:
        DOCK_HUB_UN: ${{ secrets.DOCK_HUB_UN }}
      run: |
        docker push $DOCK_HUB_UN/mpcontainer-web:latest

  container-build-pyapp:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env:
        DOCK_HUB_UN: ${{ secrets.DOCK_HUB_UN }}
        DOCK_HUB_PW: ${{ secrets.DOCK_HUB_PW }}
      run: |
        echo $DOCK_HUB_PW | docker login -u $DOCK_HUB_UN --password-stdin
    - name: build_mpcontainer-pyapp
      env:
        DOCK_HUB_UN: ${{ secrets.DOCK_HUB_UN }}
      run: |
        docker build -t mpcontainer-pyapp:latest -f ./src/pyapp/Dockerfile ./src/pyapp/
        docker tag mpcontainer-pyapp $DOCK_HUB_UN/mpcontainer-pyapp
    - name: push images to Docker Hub
      env:
        DOCK_HUB_UN: ${{ secrets.DOCK_HUB_UN }}
      run: |
        docker push $DOCK_HUB_UN/mpcontainer-pyapp:latest

  container-build-front:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env:
        DOCK_HUB_UN: ${{ secrets.DOCK_HUB_UN }}
        DOCK_HUB_PW: ${{ secrets.DOCK_HUB_PW }}
      run: |
        echo $DOCK_HUB_PW | docker login -u $DOCK_HUB_UN --password-stdin
    - name: build_mpcontainer-frontend
      env:
        DOCK_HUB_UN: ${{ secrets.DOCK_HUB_UN }}
      run: |
        docker build -t mpcontainer-frontend:latest -f ./src/haproxy/Dockerfile ./src/haproxy/
        docker tag mpcontainer-frontend $DOCK_HUB_UN/mpcontainer-frontend
    - name: push images to Docker Hub
      env:
        DOCK_HUB_UN: ${{ secrets.DOCK_HUB_UN }}
      run: |
        docker push $DOCK_HUB_UN/mpcontainer-frontend:latest

  list-my-iamges:
    runs-on: ubuntu-latest
    needs: [container-build-mpd, container-build-shell, container-build-mpd, container-build-web, container-build-pyapp, container-build-front]
    steps:
    - uses: actions/checkout@v2
    - name: list_docker_images
      run: |
        docker images