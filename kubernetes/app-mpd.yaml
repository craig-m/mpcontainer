apiVersion: v1
kind: Service
metadata:
  labels:
    mp.service: backendmpd
  name: backendmpd
  namespace: musicplayer
spec:
  ports:
  - name: "6600"
    port: 6600
    targetPort: 6600
  - name: "3123"
    port: 3123
    targetPort: 3123
  selector:
    mp.service: backendmpd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mp.service: backendmpd
  name: backendmpd
  namespace: musicplayer
spec:
  replicas: 1
  selector:
    matchLabels:
      mp.service: backendmpd
  strategy: {}
  template:
    metadata:
      labels:
        mp.network/mpdadmin: "true"
        mp.network/webfrontmpd: "true"
        mp.service: backendmpd
    spec:
      containers:
      - image: crgm/mpcontainer-mpd:latest
        imagePullPolicy: "Always"
        name: backendmpd
        ports:
        - containerPort: 6600
          protocol: TCP
        - containerPort: 3123
          protocol: TCP
        resources: {}
        startupProbe:
          exec:
            command:
            - /usr/bin/mpc
            - -h
            - DJp455w0rd101@localhost
            - outputs
          failureThreshold: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - /usr/bin/mpc
            - -h
            - DJp455w0rd101@localhost
            - outputs
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 30
        tty: true
        volumeMounts:
        - mountPath: /music
          name: music
        - mountPath: /var/lib/mpd/playlists/
          name: config
          subPath: playlists
        - mountPath: /etc/mpd.conf
          name: etc
          subPath: mpd.conf
      initContainers:
      - name: install
        image: busybox
        command: [ 'sh', '-c', "mkdir -p /var/lib/mpd/playlists" ]
        volumeMounts:
        - mountPath: /var/lib/mpd/
          name: config
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: music
        persistentVolumeClaim:
          claimName: music-claim
      - name: config
        persistentVolumeClaim:
          claimName: config-claim
      - name: etc
        configMap:
          name: mpdconf
      - name: empty
        emptyDir: {}
